//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace JustMyTicket.BusReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bus", Namespace="http://schemas.datacontract.org/2004/07/BusWCF")]
    public partial class Bus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Bus_NoField;
        
        private string DestinationField;
        
        private string DistanceField;
        
        private string DurationField;
        
        private string MappathField;
        
        private string SourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bus_No {
            get {
                return this.Bus_NoField;
            }
            set {
                if ((object.ReferenceEquals(this.Bus_NoField, value) != true)) {
                    this.Bus_NoField = value;
                    this.RaisePropertyChanged("Bus_No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceField, value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mappath {
            get {
                return this.MappathField;
            }
            set {
                if ((object.ReferenceEquals(this.MappathField, value) != true)) {
                    this.MappathField = value;
                    this.RaisePropertyChanged("Mappath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REGISTER", Namespace="http://schemas.datacontract.org/2004/07/BusWCF")]
    public partial class REGISTER : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> Bus_MoneyField;
        
        private string Email_IDField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string Phone_NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bus_Money {
            get {
                return this.Bus_MoneyField;
            }
            set {
                if ((this.Bus_MoneyField.Equals(value) != true)) {
                    this.Bus_MoneyField = value;
                    this.RaisePropertyChanged("Bus_Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email_ID {
            get {
                return this.Email_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Email_IDField, value) != true)) {
                    this.Email_IDField = value;
                    this.RaisePropertyChanged("Email_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_Number {
            get {
                return this.Phone_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_NumberField, value) != true)) {
                    this.Phone_NumberField = value;
                    this.RaisePropertyChanged("Phone_Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BusReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/RetrieveFormatedAddress", ReplyAction="http://tempuri.org/IService1/RetrieveFormatedAddressResponse")]
        System.IAsyncResult BeginRetrieveFormatedAddress(string lat, string lng, System.AsyncCallback callback, object asyncState);
        
        string EndRetrieveFormatedAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/BusRoute", ReplyAction="http://tempuri.org/IService1/BusRouteResponse")]
        System.IAsyncResult BeginBusRoute(string source, string destination, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> EndBusRoute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/BusRoute1", ReplyAction="http://tempuri.org/IService1/BusRoute1Response")]
        System.IAsyncResult BeginBusRoute1(string source, string destination, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndBusRoute1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/User_Register", ReplyAction="http://tempuri.org/IService1/User_RegisterResponse")]
        System.IAsyncResult BeginUser_Register(JustMyTicket.BusReference.REGISTER newUser, System.AsyncCallback callback, object asyncState);
        
        string EndUser_Register(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.IAsyncResult Beginlogin(string userEmail, string password, System.AsyncCallback callback, object asyncState);
        
        bool Endlogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Money_Transfer", ReplyAction="http://tempuri.org/IService1/Money_TransferResponse")]
        System.IAsyncResult BeginMoney_Transfer(string em_ID, int amount, System.AsyncCallback callback, object asyncState);
        
        string EndMoney_Transfer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Current_Balance", ReplyAction="http://tempuri.org/IService1/Current_BalanceResponse")]
        System.IAsyncResult BeginCurrent_Balance(string email, System.AsyncCallback callback, object asyncState);
        
        JustMyTicket.BusReference.REGISTER EndCurrent_Balance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/payMoney", ReplyAction="http://tempuri.org/IService1/payMoneyResponse")]
        System.IAsyncResult BeginpayMoney(string email, int money, System.AsyncCallback callback, object asyncState);
        
        bool EndpayMoney(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : JustMyTicket.BusReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveFormatedAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveFormatedAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BusRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusRoute1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BusRoute1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class User_RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public User_RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Money_TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Money_TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Current_BalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Current_BalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public JustMyTicket.BusReference.REGISTER Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((JustMyTicket.BusReference.REGISTER)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class payMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public payMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<JustMyTicket.BusReference.IService1>, JustMyTicket.BusReference.IService1 {
        
        private BeginOperationDelegate onBeginRetrieveFormatedAddressDelegate;
        
        private EndOperationDelegate onEndRetrieveFormatedAddressDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveFormatedAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginBusRouteDelegate;
        
        private EndOperationDelegate onEndBusRouteDelegate;
        
        private System.Threading.SendOrPostCallback onBusRouteCompletedDelegate;
        
        private BeginOperationDelegate onBeginBusRoute1Delegate;
        
        private EndOperationDelegate onEndBusRoute1Delegate;
        
        private System.Threading.SendOrPostCallback onBusRoute1CompletedDelegate;
        
        private BeginOperationDelegate onBeginUser_RegisterDelegate;
        
        private EndOperationDelegate onEndUser_RegisterDelegate;
        
        private System.Threading.SendOrPostCallback onUser_RegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginloginDelegate;
        
        private EndOperationDelegate onEndloginDelegate;
        
        private System.Threading.SendOrPostCallback onloginCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoney_TransferDelegate;
        
        private EndOperationDelegate onEndMoney_TransferDelegate;
        
        private System.Threading.SendOrPostCallback onMoney_TransferCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrent_BalanceDelegate;
        
        private EndOperationDelegate onEndCurrent_BalanceDelegate;
        
        private System.Threading.SendOrPostCallback onCurrent_BalanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginpayMoneyDelegate;
        
        private EndOperationDelegate onEndpayMoneyDelegate;
        
        private System.Threading.SendOrPostCallback onpayMoneyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrieveFormatedAddressCompletedEventArgs> RetrieveFormatedAddressCompleted;
        
        public event System.EventHandler<BusRouteCompletedEventArgs> BusRouteCompleted;
        
        public event System.EventHandler<BusRoute1CompletedEventArgs> BusRoute1Completed;
        
        public event System.EventHandler<User_RegisterCompletedEventArgs> User_RegisterCompleted;
        
        public event System.EventHandler<loginCompletedEventArgs> loginCompleted;
        
        public event System.EventHandler<Money_TransferCompletedEventArgs> Money_TransferCompleted;
        
        public event System.EventHandler<Current_BalanceCompletedEventArgs> Current_BalanceCompleted;
        
        public event System.EventHandler<payMoneyCompletedEventArgs> payMoneyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginRetrieveFormatedAddress(string lat, string lng, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveFormatedAddress(lat, lng, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string JustMyTicket.BusReference.IService1.EndRetrieveFormatedAddress(System.IAsyncResult result) {
            return base.Channel.EndRetrieveFormatedAddress(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveFormatedAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lat = ((string)(inValues[0]));
            string lng = ((string)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginRetrieveFormatedAddress(lat, lng, callback, asyncState);
        }
        
        private object[] OnEndRetrieveFormatedAddress(System.IAsyncResult result) {
            string retVal = ((JustMyTicket.BusReference.IService1)(this)).EndRetrieveFormatedAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveFormatedAddressCompleted(object state) {
            if ((this.RetrieveFormatedAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveFormatedAddressCompleted(this, new RetrieveFormatedAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveFormatedAddressAsync(string lat, string lng) {
            this.RetrieveFormatedAddressAsync(lat, lng, null);
        }
        
        public void RetrieveFormatedAddressAsync(string lat, string lng, object userState) {
            if ((this.onBeginRetrieveFormatedAddressDelegate == null)) {
                this.onBeginRetrieveFormatedAddressDelegate = new BeginOperationDelegate(this.OnBeginRetrieveFormatedAddress);
            }
            if ((this.onEndRetrieveFormatedAddressDelegate == null)) {
                this.onEndRetrieveFormatedAddressDelegate = new EndOperationDelegate(this.OnEndRetrieveFormatedAddress);
            }
            if ((this.onRetrieveFormatedAddressCompletedDelegate == null)) {
                this.onRetrieveFormatedAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveFormatedAddressCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveFormatedAddressDelegate, new object[] {
                        lat,
                        lng}, this.onEndRetrieveFormatedAddressDelegate, this.onRetrieveFormatedAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginBusRoute(string source, string destination, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBusRoute(source, destination, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> JustMyTicket.BusReference.IService1.EndBusRoute(System.IAsyncResult result) {
            return base.Channel.EndBusRoute(result);
        }
        
        private System.IAsyncResult OnBeginBusRoute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string source = ((string)(inValues[0]));
            string destination = ((string)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginBusRoute(source, destination, callback, asyncState);
        }
        
        private object[] OnEndBusRoute(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> retVal = ((JustMyTicket.BusReference.IService1)(this)).EndBusRoute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBusRouteCompleted(object state) {
            if ((this.BusRouteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BusRouteCompleted(this, new BusRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BusRouteAsync(string source, string destination) {
            this.BusRouteAsync(source, destination, null);
        }
        
        public void BusRouteAsync(string source, string destination, object userState) {
            if ((this.onBeginBusRouteDelegate == null)) {
                this.onBeginBusRouteDelegate = new BeginOperationDelegate(this.OnBeginBusRoute);
            }
            if ((this.onEndBusRouteDelegate == null)) {
                this.onEndBusRouteDelegate = new EndOperationDelegate(this.OnEndBusRoute);
            }
            if ((this.onBusRouteCompletedDelegate == null)) {
                this.onBusRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBusRouteCompleted);
            }
            base.InvokeAsync(this.onBeginBusRouteDelegate, new object[] {
                        source,
                        destination}, this.onEndBusRouteDelegate, this.onBusRouteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginBusRoute1(string source, string destination, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBusRoute1(source, destination, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> JustMyTicket.BusReference.IService1.EndBusRoute1(System.IAsyncResult result) {
            return base.Channel.EndBusRoute1(result);
        }
        
        private System.IAsyncResult OnBeginBusRoute1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string source = ((string)(inValues[0]));
            string destination = ((string)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginBusRoute1(source, destination, callback, asyncState);
        }
        
        private object[] OnEndBusRoute1(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((JustMyTicket.BusReference.IService1)(this)).EndBusRoute1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBusRoute1Completed(object state) {
            if ((this.BusRoute1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BusRoute1Completed(this, new BusRoute1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BusRoute1Async(string source, string destination) {
            this.BusRoute1Async(source, destination, null);
        }
        
        public void BusRoute1Async(string source, string destination, object userState) {
            if ((this.onBeginBusRoute1Delegate == null)) {
                this.onBeginBusRoute1Delegate = new BeginOperationDelegate(this.OnBeginBusRoute1);
            }
            if ((this.onEndBusRoute1Delegate == null)) {
                this.onEndBusRoute1Delegate = new EndOperationDelegate(this.OnEndBusRoute1);
            }
            if ((this.onBusRoute1CompletedDelegate == null)) {
                this.onBusRoute1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBusRoute1Completed);
            }
            base.InvokeAsync(this.onBeginBusRoute1Delegate, new object[] {
                        source,
                        destination}, this.onEndBusRoute1Delegate, this.onBusRoute1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginUser_Register(JustMyTicket.BusReference.REGISTER newUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUser_Register(newUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string JustMyTicket.BusReference.IService1.EndUser_Register(System.IAsyncResult result) {
            return base.Channel.EndUser_Register(result);
        }
        
        private System.IAsyncResult OnBeginUser_Register(object[] inValues, System.AsyncCallback callback, object asyncState) {
            JustMyTicket.BusReference.REGISTER newUser = ((JustMyTicket.BusReference.REGISTER)(inValues[0]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginUser_Register(newUser, callback, asyncState);
        }
        
        private object[] OnEndUser_Register(System.IAsyncResult result) {
            string retVal = ((JustMyTicket.BusReference.IService1)(this)).EndUser_Register(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUser_RegisterCompleted(object state) {
            if ((this.User_RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.User_RegisterCompleted(this, new User_RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void User_RegisterAsync(JustMyTicket.BusReference.REGISTER newUser) {
            this.User_RegisterAsync(newUser, null);
        }
        
        public void User_RegisterAsync(JustMyTicket.BusReference.REGISTER newUser, object userState) {
            if ((this.onBeginUser_RegisterDelegate == null)) {
                this.onBeginUser_RegisterDelegate = new BeginOperationDelegate(this.OnBeginUser_Register);
            }
            if ((this.onEndUser_RegisterDelegate == null)) {
                this.onEndUser_RegisterDelegate = new EndOperationDelegate(this.OnEndUser_Register);
            }
            if ((this.onUser_RegisterCompletedDelegate == null)) {
                this.onUser_RegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUser_RegisterCompleted);
            }
            base.InvokeAsync(this.onBeginUser_RegisterDelegate, new object[] {
                        newUser}, this.onEndUser_RegisterDelegate, this.onUser_RegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.Beginlogin(string userEmail, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginlogin(userEmail, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool JustMyTicket.BusReference.IService1.Endlogin(System.IAsyncResult result) {
            return base.Channel.Endlogin(result);
        }
        
        private System.IAsyncResult OnBeginlogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userEmail = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).Beginlogin(userEmail, password, callback, asyncState);
        }
        
        private object[] OnEndlogin(System.IAsyncResult result) {
            bool retVal = ((JustMyTicket.BusReference.IService1)(this)).Endlogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnloginCompleted(object state) {
            if ((this.loginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.loginCompleted(this, new loginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void loginAsync(string userEmail, string password) {
            this.loginAsync(userEmail, password, null);
        }
        
        public void loginAsync(string userEmail, string password, object userState) {
            if ((this.onBeginloginDelegate == null)) {
                this.onBeginloginDelegate = new BeginOperationDelegate(this.OnBeginlogin);
            }
            if ((this.onEndloginDelegate == null)) {
                this.onEndloginDelegate = new EndOperationDelegate(this.OnEndlogin);
            }
            if ((this.onloginCompletedDelegate == null)) {
                this.onloginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnloginCompleted);
            }
            base.InvokeAsync(this.onBeginloginDelegate, new object[] {
                        userEmail,
                        password}, this.onEndloginDelegate, this.onloginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginMoney_Transfer(string em_ID, int amount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoney_Transfer(em_ID, amount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string JustMyTicket.BusReference.IService1.EndMoney_Transfer(System.IAsyncResult result) {
            return base.Channel.EndMoney_Transfer(result);
        }
        
        private System.IAsyncResult OnBeginMoney_Transfer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string em_ID = ((string)(inValues[0]));
            int amount = ((int)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginMoney_Transfer(em_ID, amount, callback, asyncState);
        }
        
        private object[] OnEndMoney_Transfer(System.IAsyncResult result) {
            string retVal = ((JustMyTicket.BusReference.IService1)(this)).EndMoney_Transfer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoney_TransferCompleted(object state) {
            if ((this.Money_TransferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Money_TransferCompleted(this, new Money_TransferCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Money_TransferAsync(string em_ID, int amount) {
            this.Money_TransferAsync(em_ID, amount, null);
        }
        
        public void Money_TransferAsync(string em_ID, int amount, object userState) {
            if ((this.onBeginMoney_TransferDelegate == null)) {
                this.onBeginMoney_TransferDelegate = new BeginOperationDelegate(this.OnBeginMoney_Transfer);
            }
            if ((this.onEndMoney_TransferDelegate == null)) {
                this.onEndMoney_TransferDelegate = new EndOperationDelegate(this.OnEndMoney_Transfer);
            }
            if ((this.onMoney_TransferCompletedDelegate == null)) {
                this.onMoney_TransferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoney_TransferCompleted);
            }
            base.InvokeAsync(this.onBeginMoney_TransferDelegate, new object[] {
                        em_ID,
                        amount}, this.onEndMoney_TransferDelegate, this.onMoney_TransferCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginCurrent_Balance(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrent_Balance(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        JustMyTicket.BusReference.REGISTER JustMyTicket.BusReference.IService1.EndCurrent_Balance(System.IAsyncResult result) {
            return base.Channel.EndCurrent_Balance(result);
        }
        
        private System.IAsyncResult OnBeginCurrent_Balance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginCurrent_Balance(email, callback, asyncState);
        }
        
        private object[] OnEndCurrent_Balance(System.IAsyncResult result) {
            JustMyTicket.BusReference.REGISTER retVal = ((JustMyTicket.BusReference.IService1)(this)).EndCurrent_Balance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCurrent_BalanceCompleted(object state) {
            if ((this.Current_BalanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Current_BalanceCompleted(this, new Current_BalanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Current_BalanceAsync(string email) {
            this.Current_BalanceAsync(email, null);
        }
        
        public void Current_BalanceAsync(string email, object userState) {
            if ((this.onBeginCurrent_BalanceDelegate == null)) {
                this.onBeginCurrent_BalanceDelegate = new BeginOperationDelegate(this.OnBeginCurrent_Balance);
            }
            if ((this.onEndCurrent_BalanceDelegate == null)) {
                this.onEndCurrent_BalanceDelegate = new EndOperationDelegate(this.OnEndCurrent_Balance);
            }
            if ((this.onCurrent_BalanceCompletedDelegate == null)) {
                this.onCurrent_BalanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrent_BalanceCompleted);
            }
            base.InvokeAsync(this.onBeginCurrent_BalanceDelegate, new object[] {
                        email}, this.onEndCurrent_BalanceDelegate, this.onCurrent_BalanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult JustMyTicket.BusReference.IService1.BeginpayMoney(string email, int money, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginpayMoney(email, money, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool JustMyTicket.BusReference.IService1.EndpayMoney(System.IAsyncResult result) {
            return base.Channel.EndpayMoney(result);
        }
        
        private System.IAsyncResult OnBeginpayMoney(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            int money = ((int)(inValues[1]));
            return ((JustMyTicket.BusReference.IService1)(this)).BeginpayMoney(email, money, callback, asyncState);
        }
        
        private object[] OnEndpayMoney(System.IAsyncResult result) {
            bool retVal = ((JustMyTicket.BusReference.IService1)(this)).EndpayMoney(result);
            return new object[] {
                    retVal};
        }
        
        private void OnpayMoneyCompleted(object state) {
            if ((this.payMoneyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.payMoneyCompleted(this, new payMoneyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void payMoneyAsync(string email, int money) {
            this.payMoneyAsync(email, money, null);
        }
        
        public void payMoneyAsync(string email, int money, object userState) {
            if ((this.onBeginpayMoneyDelegate == null)) {
                this.onBeginpayMoneyDelegate = new BeginOperationDelegate(this.OnBeginpayMoney);
            }
            if ((this.onEndpayMoneyDelegate == null)) {
                this.onEndpayMoneyDelegate = new EndOperationDelegate(this.OnEndpayMoney);
            }
            if ((this.onpayMoneyCompletedDelegate == null)) {
                this.onpayMoneyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnpayMoneyCompleted);
            }
            base.InvokeAsync(this.onBeginpayMoneyDelegate, new object[] {
                        email,
                        money}, this.onEndpayMoneyDelegate, this.onpayMoneyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override JustMyTicket.BusReference.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<JustMyTicket.BusReference.IService1>, JustMyTicket.BusReference.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<JustMyTicket.BusReference.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrieveFormatedAddress(string lat, string lng, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lat;
                _args[1] = lng;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveFormatedAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRetrieveFormatedAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RetrieveFormatedAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBusRoute(string source, string destination, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = source;
                _args[1] = destination;
                System.IAsyncResult _result = base.BeginInvoke("BusRoute", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> EndBusRoute(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus> _result = ((System.Collections.ObjectModel.ObservableCollection<JustMyTicket.BusReference.Bus>)(base.EndInvoke("BusRoute", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBusRoute1(string source, string destination, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = source;
                _args[1] = destination;
                System.IAsyncResult _result = base.BeginInvoke("BusRoute1", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndBusRoute1(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("BusRoute1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUser_Register(JustMyTicket.BusReference.REGISTER newUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = newUser;
                System.IAsyncResult _result = base.BeginInvoke("User_Register", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUser_Register(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("User_Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginlogin(string userEmail, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userEmail;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("login", _args, callback, asyncState);
                return _result;
            }
            
            public bool Endlogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMoney_Transfer(string em_ID, int amount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = em_ID;
                _args[1] = amount;
                System.IAsyncResult _result = base.BeginInvoke("Money_Transfer", _args, callback, asyncState);
                return _result;
            }
            
            public string EndMoney_Transfer(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Money_Transfer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCurrent_Balance(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("Current_Balance", _args, callback, asyncState);
                return _result;
            }
            
            public JustMyTicket.BusReference.REGISTER EndCurrent_Balance(System.IAsyncResult result) {
                object[] _args = new object[0];
                JustMyTicket.BusReference.REGISTER _result = ((JustMyTicket.BusReference.REGISTER)(base.EndInvoke("Current_Balance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginpayMoney(string email, int money, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = money;
                System.IAsyncResult _result = base.BeginInvoke("payMoney", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndpayMoney(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("payMoney", _args, result)));
                return _result;
            }
        }
    }
}
